#!/bin/sh
# OpenLGTV BCM script
# New Init Script for LG Broadcom platform based TVs by xeros
# Source code released under GPL License

#export PATH=/bin:/sbin:/usr/bin:/usr/sbin:.              # rcS default
#export PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin # lginit default

# cmdline auto 2: 
# root=/dev/mtdblock3 lginit=/dev/mtdblock4 ro  rootfstype=squashfs appxip_addr=0x2600000 xipfs=22 mem=316M bmem=196M  autorun usbpwr  lcdmodules nouserinit lock_time=0 panic=0 lpj=201728 bcmrac=3 migration_cost=1000 bver=1.02.20 start_kernel=2793
# cmdline auto 4:
# root=/dev/mtdblock3  ro  rootfstype=squashfs mem=316M bmem=196M ip=192.168.0.2:192.168.0.1:192.168.0.1:255.255.255.0::eth0  usbpwr  lcdmodules  lock_time=0 panic=0 lpj=201728 bcmrac=3 migration_cost=1000 bver=1.02.20 start_kernel=4040

echo "OpenLGTV_BCM-INFO: variables initialization"
#export PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:.
export PATH=.:/mnt/user/bin:/sbin:/usr/sbin:/bin:/usr/bin:/usr/local/bin:/usr/local/sbin:/mnt/browser/bin:/mnt/addon/bin:/mnt/addon/stagecraft/bin:/scripts
#export LD_LIBRARY_PATH=/lib:/usr/lib:/usr/local/lib:/mnt/addon/lib:/mnt/addon/stagecraft/lib:/mnt/lg/res/lgres
export LD_LIBRARY_PATH=.:/mnt/user/lib:/lib:/usr/lib:/usr/local/lib:/mnt/lg/res/lgres:/mnt/browser/lib:/mnt/addon/lib:/mnt/addon/stagecraft/lib

source /etc/rc.d/rc.variables

# TERM should be set only for boot, profile loaded at login shouldn't set it itself
export TERM=vt100

mount -t proc proc /proc
mount -t ramfs tmp /tmp

mkdir -p /tmp/var/run /tmp/var/log /tmp/var/service /tmp/var/lib/hwclock /tmp/var/lib/misc

#touch /var/log/boot                                                             2>&1 | tee -a $bootlogf

echo "OpenLGTV_BCM-INFO: OpenLGTV BCM rcS script ver. $ver starting..."               | tee -a $bootlogf
/bin/date +"OpenLGTV_BCM-TIME: %F %T script: $0"                                      | tee -a $bootlogf

AUTORUN=`grep autorun /proc/cmdline`

if [ "$AUTORUN" != "" ]
then

#mount -t ramfs tmp /tmp

echo "OpenLGTV_BCM-INFO: starting in AUTORUN mode"                                    | tee -a $bootlogf

source /etc/rc.d/rc.mount1                                                       2>&1 | tee -a $bootlogf

/sbin/bootlogd -p /var/run/bootlogd.pid -l $bootlogf
# '| tee -a $bootlogf' is not needed from this place - bootlogd should log boot messages

source /etc/rc.d/rc.mount2

echo "OpenLGTV_BCM-INFO: enabling possibility to break init script with CTRL+C now"
stty brkint

source /etc/rc.d/rc.modules-lg

source /etc/rc.d/rc.mount3

#/bin/date +"OpenLGTV_BCM-TIME: %F %T script: $0"

# mount partitons (/etc/fstab)
#mount -a			# rcS default
#mount --bind /mnt/flash/data	/mnt/lg/recdb

#export HOOK_SEGV=YES		# rcS default
#export LOG_CALLER=YES		# rcS default
#export LOAD_SYM=1		# rcS default
#export OSAMEM_SIZE=0x200000	# rcS default

if [ ! -f "/mnt/flash/data/resolv.conf" ]
then
    echo "OpenLGTV_BCM-INFO: creating empty /mnt/flash/data/resolv.conf file"
    touch /mnt/flash/data/resolv.conf
fi

if [ ! -f "/mnt/flash/data/hosts" ]
then
    echo "OpenLGTV_BCM-INFO: creating empty /mnt/flash/data/hosts file"
    touch /mnt/flash/data/hosts
fi

export uver=`cat /mnt/user/etc/ver2`

#
# Network parameters
#

echo "OpenLGTV_BCM-INFO: creating dirs in /tmp/ for logs and /var temporary data"
#mkdir -p /tmp/var/run /tmp/var/log /tmp/var/service /tmp/var/lib/hwclock /tmp/var/lib/misc /tmp/var/spool/cron
touch /var/run/utmp /var/log/wtmp /var/log/lastlog
chgrp utmp /var/run/utmp /var/log/wtmp
chmod 0664 /var/run/utmp /var/log/wtmp
#mv -f $bootlogf /var/log/

source /etc/rc.d/rc.network

source /etc/rc.d/rc.kill-lginit

#/bin/date +"OpenLGTV_BCM-TIME: %F %T script: $0"
echo "OpenLGTV_BCM-INFO: setting time via NTP server pool"
#ntpclient -h pool.ntp.org -s -c 1 > /dev/null 2>&1 &
ntpd -p pool.ntp.org > /dev/null 2>&1 &

if [ ! -d "/mnt/user/etc" ]
then
    echo "OpenLGTV_BCM-WARN: /mnt/user/etc dir does not exist, creating it"
    mkdir -p /mnt/user/etc || user_readonly=1
fi
if [ "$user_readonly" = "1" ]
then
    echo "OpenLGTV_BCM-ERROR: /mnt/user not writable??? lets create tmpfs there then to not break boot process"
    mount -t tmpfs tmpfs /mnt/user
    mkdir -p /mnt/user/etc
fi

if [ ! -d "/mnt/user/cfg" ]
then
    echo "OpenLGTV_BCM-WARN: OpenLGTV BCM config dir (/mnt/user/cfg) not found, creating it"
    mkdir -p /mnt/user/cfg
fi
if [ ! -d "/mnt/user/lock" ]
then
    echo "OpenLGTV_BCM-INFO: creating /mnt/user/lock dir for one time script exectuting locks..."
    mkdir -p /mnt/user/lock
fi

#/bin/date +"OpenLGTV_BCM-TIME: %F %T script: $0"
if [ ! -f "/usr/etc/passwd" ]
then
    #mount -t tmpfs none /usr/etc
    if [ -f "/mnt/user/etc/passwd" ]
    then
        echo "OpenLGTV_BCM-INFO: using /mnt/user/etc/passwd file"
	#cp /mnt/user/etc/passwd /usr/etc/passwd
	ln -sf /mnt/user/etc/passwd /usr/etc/passwd
    else
        echo "OpenLGTV_BCM-WARN: creating /mnt/user/etc/passwd file based on default one"
	#cp /etc/passwd.org /usr/etc/passwd
	cp /etc/passwd.org /mnt/user/etc/passwd
	ln -sf /mnt/user/etc/passwd /usr/etc/passwd
    fi
fi
if [ ! -f "/usr/etc/shadow" ]
then
    if [ -f "/mnt/user/etc/shadow" ]
    then
        echo "OpenLGTV_BCM-INFO: using /mnt/user/etc/shadow file"
	#cp /mnt/user/etc/shadow /usr/etc/shadow
	ln -sf /mnt/user/etc/shadow /usr/etc/shadow
    else
        echo "OpenLGTV_BCM-WARN: creating /mnt/user/etc/shadow file based on default one"
	#cp /etc/shadow.org /usr/etc/shadow
	cp /etc/shadow.org /mnt/user/etc/shadow
	ln -sf /mnt/user/etc/shadow /usr/etc/shadow
    fi
fi

#/bin/date +"OpenLGTV_BCM-TIME: %F %T script: $0"
if [ ! -d "/usr/etc/dropbear" ]
then
    if [ -d "/mnt/user/etc/dropbear" ]
    then
        echo "OpenLGTV_BCM-INFO: using /mnt/user/etc/dropear path for SSH host keys"
	#cp -r /mnt/user/etc/dropbear /usr/etc/
	ln -sf /mnt/user/etc/dropbear /usr/etc/dropbear
    else
        echo "OpenLGTV_BCM-WARN: generating new SSH host keys in /mnt/user/etc/dropear path"
	mkdir -p /mnt/user/etc/dropbear
	dropbearkey -t dss -f /mnt/user/etc/dropbear/dropbear_dss_host_key
	dropbearkey -t rsa -f /mnt/user/etc/dropbear/dropbear_rsa_host_key
	#cp -r /mnt/user/etc/dropbear /usr/etc/
	ln -sf /mnt/user/etc/dropbear /usr/etc/dropbear
    fi
fi
if [ ! -d "/mnt/user/.ssh" ]
then
    echo "OpenLGTV_BCM-INFO: creating /mnt/user/.ssh dir for storage of user SSH configs and keys"
    mkdir /mnt/user/.ssh
fi
if [ ! -d "/tmp/.ssh" ]
then
    echo "OpenLGTV_BCM-INFO: linking /tmp/.ssh to /mnt/user/.ssh dir for storage of user SSH configs and keys"
    ln -sf /mnt/user/.ssh /tmp/.ssh
fi

source /etc/rc.d/rc.settings

#/bin/date +"OpenLGTV_BCM-TIME: %F %T script: $0"
echo "OpenLGTV_BCM-INFO: starting portmapper..."
portmap &

if [ "$disable_telnet" != "1" ]
then
    echo "OpenLGTV_BCM-INFO: starting telnet server..."
    telnetd &
fi

if [ "$alternative_port_for_ssh" != "1" ]
then
    echo "OpenLGTV_BCM-INFO: starting dropbear SSH server..."
    dropbear &
else
    echo "OpenLGTV_BCM-INFO: starting dropbear SSH server on alternative port (2222)..."
    dropbear -p 2222 &
fi

echo "OpenLGTV_BCM-INFO: setting hostname to OpenLGTV_BCM..."
hostname OpenLGTV_BCM

[ ! -d "/mnt/user/spool/cron/crontabs" ] && mkdir -p /mnt/user/spool/cron/crontabs
[ ! -d "/mnt/user/modules" ]             && mkdir -p /mnt/user/modules

# Lets load modules in background to shorten boot time
/etc/rc.d/rc.modules &

#/bin/date +"OpenLGTV_BCM-TIME: %F %T script: $0"
source /etc/rc.d/rc.netcast
#/bin/date +"OpenLGTV_BCM-TIME: %F %T script: $0"
source /etc/rc.d/rc.ywe
#/bin/date +"OpenLGTV_BCM-TIME: %F %T script: $0"

# Making nvram copy
if [ "$mtd_nvram" != "" ]
then
    echo "OpenLGTV_BCM-INFO: making NVRAM copy from /dev/mtd$mtd_nvram partition..."
    #cat /dev/mtd$mtd_nvram > /tmp/nvram &
    /etc/rc.d/rc.nvram &
fi

nice -n 20 /etc/rc.d/rc.fwinfo | tee -a /var/log/fwinfo.log &

#/bin/date +"OpenLGTV_BCM-TIME: %F %T script: $0"
echo "OpenLGTV_BCM-INFO: setting hotplug wrapper..."
echo /scripts/hotplug-wrapper.sh > /proc/sys/kernel/hotplug
#############/etc/rc.d/rc.usb &

/etc/rc.d/rc.ether-wake &

/etc/rc.d/rc.firewall

/etc/rc.d/rc.httpd

#/bin/date +"OpenLGTV_BCM-TIME: %F %T script: $0"
(sleep 15; /etc/rc.d/rc.directfb)&

if [ "$uver" != "$ver" ]
then
    echo "OpenLGTV_BCM-INFO: last booted version is different from current, making /mnt/user/etc/ver2 file update"
    cp -f /etc/ver2 /mnt/user/etc/ver2
fi

if [ ! -d "/mnt/user/init.d" ]
then
    echo "OpenLGTV_BCM-INFO: creating /mnt/user/init.d dir for custom init scripts"
    mkdir -p /mnt/user/init.d
fi

if [ -d "/mnt/user/init.d" ]
then
    scr_files="`find /mnt/user/init.d/* -perm -u=x 2>/dev/null`"
    #if [ "`ls /mnt/user/init.d/ | wc -l`" -gt "0" ]
    #if [ "`echo $scr_files | wc -w`" -gt "0" ]
    if [ -n "$scr_files" ]
    then
	echo "OpenLGTV_BCM-INFO: executing custom init scripts from /mnt/user/init.d/"
	#for scr_file in /mnt/user/init.d/*
	for scr_file in $scr_files
	do
	    echo "OpenLGTV_BCM-INFO: executing $scr_file ..."
	    $scr_file
	done
    fi
fi

(sleep 10; /etc/rc.d/rc.mount-netshare)&

echo ""

source /etc/rc.d/rc.release

#/bin/date +"OpenLGTV_BCM-TIME: %F %T script: $0"
#/bin/sh

echo "OpenLGTV_BCM-INFO: rcS end... login now"
echo ""




else

# default, (almost) original rcS script execution for compatibility with other 'auto' CFE modes

# mount partitons (/etc/fstab)
mount -a
#mount --bind /mnt/flash/data	/mnt/lg/recdb

export HOOK_SEGV=YES
export LOG_CALLER=YES
export LOAD_SYM=1
export OSAMEM_SIZE=0x200000

# MTD part index
PART_LGAPP_IDX=6

# Check lgapplication auto-run
AUTORUN=`grep autorun /proc/cmdline`

if [ "$AUTORUN" != "" ]; then

	# lgapp mount parameters
	XIPADDR=`cat /proc/xipfs`

	if [ "$XIPADDR" != "" ] && [ "$XIPADDR" != "0x0" ]; then
		mount -t cramfs -o physaddr=$XIPADDR lgapp /mnt/lg/lgapp
	else
		mount -t squashfs /dev/mtdblock$PART_LGAPP_IDX /mnt/lg/lgapp
	fi

	export LD_LIBRARY_PATH=/mnt/lg/res/lgres
	touch  /mnt/flash/data/resolv.conf

	# we will remove this code, when btusb.ko is built in kernel.
	if [ -e /mnt/lg/res/lgres/btusb.ko ]; then
		insmod /mnt/lg/res/lgres/btusb.ko
	fi
	
	if [ -e /lg/lgapp/wl.ko ]; then
		insmod /lg/lgapp/wl.ko
	fi	

	ifconfig lo 127.0.0.1 netmask 255.0.0.0
	#ifconfig eth0 192.168.0l.1 netmask $NETMASK up
	#route add default gw $GATEWAY

	if [ -e /lg/lgapp/NetworkManager ]; then
		/lg/lgapp/NetworkManager -d
	fi	

	if [ -e /lg/lgapp/rcS.bb ]; then
		source /lg/lgapp/rcS.bb
	fi

	cd /lg/lgapp; ./RELEASE
fi

#
# Network parameters
#
mkdir /var/run /var/log
cat /dev/null > /var/run/utmp
cat /dev/null > /var/log/wtmp
chgrp utmp /var/run/utmp /var/log/wtmp
chmod 0664 /var/run/utmp /var/log/wtmp

TARGET_IP=$(cat /proc/cmdline | awk 'BEGIN { RS="[ :]"; FS="="; } /ip=/ { print $2 } END {}')
SERVER_IP=$(cat /proc/cmdline | awk 'BEGIN { RS="[ ]"; FS=":"; } /ip=/ { print $2 } END {}')
GATEWAY=$(cat /proc/cmdline | awk 'BEGIN { RS="[ ]"; FS=":"; } /ip=/ { print $3 } END {}')
NETMASK=$(cat /proc/cmdline | awk 'BEGIN { RS="[ ]"; FS=":"; } /ip=/ { print $4 } END {}')

#
# Network setting
#
ifconfig lo 127.0.0.1 netmask 255.0.0.0
ifconfig eth0 $TARGET_IP netmask $NETMASK up
route add default gw $GATEWAY
echo "start services"
portmap &
telnetd &
hostname bcm35xx

if [ -e /lg/lgapp/NetworkManager ]; then
	/lg/lgapp/NetworkManager -d
fi	

mount -t tmpfs none /usr/etc
cp /etc/passwd.org /usr/etc/passwd

#
# Mount nfs
#
if [ "$AUTORUN" == "" ]; then
	sleep 3
	let i=0
	while [ $i != 5 ]
	do
		ping -c 1 $GATEWAY > /dev/null 2>&1
		if [ $? -eq 0 ]; then
			break;
		fi
		usleep 10000
	done
	echo "Server IP=$SERVER_IP Target IP=$TARGET_IP"
	#echo "Mounting /share/global_platform as /home"
	echo "Mounting /share/global_platform/bcm35xx as /home"
	mount -t nfs -o rsize=32768,wsize=32768,tcp,nolock $SERVER_IP:/share/global_platform/bcm35xx /home
	echo "Mount-binding /home as /mnt/lg/lgapp"
	mount --bind /home /mnt/lg/lgapp

	USER_LIST=$(ls /home)

	echo "Creating user list"
	for SERVER_USER in $USER_LIST
	do
		if [ -d /home/$SERVER_USER ] && [ $SERVER_USER != root ]; then
			echo "$SERVER_USER::0:0:$SERVER_USER:/home/$SERVER_USER:/bin/sh" >> /usr/etc/passwd
		fi
	done
	echo "openlgtv::0:0:OpenLGTV_BCM:/home:/bin/sh" >> /usr/etc/passwd
fi

export TERM=vt100
export ADDON_SYS_PATH=/mnt/addon
export ADDON_RES_PATH=/mnt/lg/res/lgfont
export ADDON_APP_CTRL=addon_mgr
export ADDON_APP_BATCH_LIST=addon_mgr.bat
export FLASH_APP_NAME=/mnt/addon/stagecraft/bin/stagecraft
export FLASH_YOUTUBE_PATH=/mnt/addon/contents/youtube/exec_youtube.swf
export FLASH_PICASA_PATH=/mnt/addon/contents/picasa/exec_picasa.swf
export FLASH_EMANUAL_PATH=/mnt/addon/contents/emanual/emmanager.swf
export ADDON_PRELOADED_PATH=/mnt/addon/contents
export HOME=/home
export DEPLOY_DIR=/mnt/browser
export ADDON_UP_CTRL=up_ctrl
export PREMIUM_MASTER=master.swf
export STORE_MASTER=StoreMaster.swf
export SEARCH_RESULT=/mnt/addon/contents/search/search.swf


echo "Done...login now"
echo ""


fi
