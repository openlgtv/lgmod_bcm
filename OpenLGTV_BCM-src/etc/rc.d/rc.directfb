#!/bin/sh
# OpenLGTV BCM script rc.directfb
# DirectFB config and libs preparation script for LG Broadcom platform based TVs by xeros
# Source code released under GPL License

LOCKFILE="/var/run/rc.directfb.lock"
USBHID_CONNECTED_FILE="/var/run/usbhid.connected"
DIRECTFBRC="/usr/local/etc/directfbrc"
v_res=1280x720

if [ -f "$LOCKFILE" ]
then
    echo "OpenLGTV_BCM-WARN: another rc.directfb script instance is already handling action, exiting..."
    exit 0
fi

echo -e "OpenLGTV_BCM-INFO: rc.directfb script starting...\nOpenLGTV_BCM-INFO: rc.directfb creating LOCKFILE: $LOCKFILE..."
touch "$LOCKFILE"

pid=`pgrep RELEASE | tail -n 1`

cursorupdates="no-cursor-updates"

[ "$netcast_keyboard_mouse_support" = "" -a -f "/mnt/user/cfg/settings" ] && source /mnt/user/cfg/settings

if [ "$netcast_keyboard_mouse_support" = "1" ]
then
    if [ "$1 $2" = "hotplug add" -o -f "$USBHID_CONNECTED_FILE" ]
    then
	cursorupdates="cursor-updates"
    fi
fi

#v_start_hex=`cat /proc/${pid}/maps | grep "/dev/mem" | awk -F- '{ if(NR==3) printf("%s\n", $1) }'`
v_start_hex=`grep "/dev/mem" /proc/${pid}/maps | awk -F- '{ if(NR==3) printf("%s\n", $1) }'`
#v_start_dec=`echo $((0x${v_start_hex}))`
v_start_dec="$((0x${v_start_hex}))"
#v_end_hex=`cat /proc/${pid}/maps | grep "/dev/mem" | awk '{ if(NR==3) printf("%s\n", $1) }'| awk -F- '{ printf("%s\n", $2) }'`
v_end_hex=`grep "/dev/mem" /proc/${pid}/maps | awk '{ if(NR==3) printf("%s\n", $1) }'| awk -F- '{ printf("%s\n", $2) }'`
#v_end_hex=`echo $v_start_hex | awk -F- '{ printf("%s\n", $2) }'`
#v_end_dec=`echo $((0x${v_end_hex}))`
v_end_dec="$((0x${v_end_hex}))"
#p_start_hex=`cat /proc/${pid}/maps | grep "/dev/mem" | awk '{ if(NR==3) printf("%s\n", $3) }'`
p_start_hex=`grep "/dev/mem" /proc/${pid}/maps | awk '{ if(NR==3) printf("%s\n", $3) }'`
p_size_dec=`echo "${v_start_dec} ${v_end_dec}" | awk '{ printf("%d\n", $2-$1) }'`

echo "OpenLGTV_BCM-INFO: generating $DIRECTFBRC file..."

echo -e "# generated by rc.directfb\nsystem=devmem" > $DIRECTFBRC
echo -e "video-phys=${p_start_hex}\nvideo-length=${p_size_dec}\naccelerator=147\nmode=${v_res}\ndepth=32\npixelformat=ARGB" >> $DIRECTFBRC
echo -e "no-vt\nno-vt-switch\nno-quiet\nno-trace\n#debug\n#desktop-buffer-mode=frontonly\n#desktop-buffer-mode=backsystem" >> $DIRECTFBRC
echo -e "desktop-buffer-mode=backvideo\n#desktop-buffer-mode=auto\n#window-surface-policy=systemonly" >> $DIRECTFBRC
#echo -e "log-file=/var/log/directfb.log\n#bg-none\nbg-color=0x00000000\ncursor-updates\ntmpfs=/dev/shm" >> $DIRECTFBRC
echo -e "log-file=/var/log/directfb.log\n#bg-none\nbg-color=0x00000000\n${cursorupdates}\ntmpfs=/dev/shm" >> $DIRECTFBRC
echo -e "no-sighandler\n#no-init-layer\n#disable-module=keyboard\nvsync-none\nno-linux-input-grab" >> $DIRECTFBRC

if [ "$netcast_keyboard_mouse_support" = "1" -a "$1" != "hotplug" ]
then
    if [ -d "/mnt/browser/lib/directfb-1.2-0/inputdrivers" ]
    then
	echo "OpenLGTV_BCM-INFO: found /mnt/browser/lib/directfb-1.2-0/inputdrivers dir - preparing libs config..."
	if [ ! -d "/home/inputdrivers" ]
	then
	    echo "OpenLGTV_BCM-INFO: /home/inputdrivers dir does not exist - creating it and copying drivers..."
	    mkdir -p /home/inputdrivers
	    cp -f /mnt/browser/lib/directfb-1.2-0/inputdrivers/libdirectfb_keyboard.so  /home/inputdrivers/
	    cp -f /usr/local/lib/directfb-1.2-0/inputdrivers/libdirectfb_linux_input.so /home/inputdrivers/
	fi
	echo "OpenLGTV_BCM-INFO: linking /home/inputdrivers to /mnt/browser/lib/directfb-1.2-0/inputdrivers..."
	mount --bind /home/inputdrivers /mnt/browser/lib/directfb-1.2-0/inputdrivers
    else
	echo "OpenLGTV_BCM-WARN: /mnt/browser/lib/directfb-1.2-0/inputdrivers dir NOT FOUND - skipping libs config..."
    fi
fi

echo "OpenLGTV_BCM-INFO: terminating web browser process - lb4wk (you may ignore error if its not running)..."
killall lb4wk

echo "OpenLGTV_BCM-INFO: rc.directfb removing LOCKFILE: $LOCKFILE..."
rm -f "$LOCKFILE"
